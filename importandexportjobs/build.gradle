plugins {
  id 'org.springframework.boot' version '2.7.0'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
  mavenCentral()
}

configurations {
  domaGenRuntime
}

dependencies {
  implementation("org.springframework.boot:spring-boot-starter-batch")
  developmentOnly("org.springframework.boot:spring-boot-devtools")
  testImplementation("org.springframework.boot:spring-boot-starter-test")
  testImplementation("org.springframework.batch:spring-batch-test")

  // mysql
  implementation("mysql:mysql-connector-java:8.0.28")

  // Jackson Datatype
  implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.3")

  // Lombok
  compileOnly("org.projectlombok:lombok")
  annotationProcessor("org.projectlombok:lombok")

  // DomaGen
  implementation("org.seasar.doma:doma-gen:2.28.0")
  domaGenRuntime("org.seasar.doma:doma-gen:2.28.0")
  domaGenRuntime("mysql:mysql-connector-java:8.0.28")
}

tasks.named('test') {
  useJUnitPlatform()
}

task gen {
  def url = "jdbc:mysql://localhost/springbatch_db"
  def username = "springbatch"
  def password = "springbatch"
  def packageName = "com.example.importandexportjobs.entity"
  def destDir = "src/main/java"
  def tableNamePattern = ".*"

  group = 'doma-gen'
  doLast {
    ant.taskdef(resource: 'domagentask.properties',
            classpath: configurations.domaGenRuntime.asPath)
    ant.gen(url: url,
            user: username,
            password: password,
            tableNamePattern: tableNamePattern) {
      entityConfig(packageName: packageName,
              destDir: destDir,
              useListener: false)
      // daoConfig()
      // sqlConfig()
    }
  }
}
